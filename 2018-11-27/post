ðŸ˜±ðŸ˜± Python environment management ðŸ¤”ðŸ¤”

At first thought, python installation seems pretty straightforward: download the binary âž¡ install it âž¡ start using python ðŸ˜Ž but things are a little more complicated ðŸ˜¢

First, you need to decide which python distribution you want to download: from official python.org or a third-party distribution, maybe the most famous is Anaconda, but there are many others which can better suit your needs

Second, which python version to download: python2 vs python3, if python3, then python3.5 or python3.6 vs python3.7 ðŸ˜•ðŸ˜•

Finally, you need to decide how to isolate different projects: python ships with builtin venv module, but people usually use virtualenv or virtualenvwrapper. A somewhat "new" options is pipenv, which is a wrapper for pip and virtual environments. If you are using Anaconda, you can use conda to manage environments ðŸ˜±ðŸ˜±ðŸ˜±

Of course, you could also setup everything in a docker image (or other virtualization tool) to have proper OS reproducibility ðŸ˜ˆðŸ˜ˆðŸ‘»ðŸ‘»

I usually go for the miniconda distribution, with conda for managing environments and either pip or conda for package management

How do you manage your python installation, environment and packages?
tell me â¬‡â¬‡ in the comments â¬‡â¬‡
